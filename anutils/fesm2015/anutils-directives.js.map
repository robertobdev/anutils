{"version":3,"file":"anutils-directives.js","sources":["../../../projects/anutils/directives/cpf-mask/cpf-mask.directive.ts","../../../projects/anutils/directives/cnpj-mask/cnpj-mask.directive.ts","../../../projects/anutils/directives/phone-mask/phone-mask.directive.ts","../../../projects/anutils/directives/zip-code-mask/zip-code-mask.directive.ts","../../../projects/anutils/directives/shimmer/shimmer.directive.ts","../../../projects/anutils/directives/anutils-directives.module.ts","../../../projects/anutils/directives/anutils-directives.ts"],"sourcesContent":["import { Directive, HostListener, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[anutilsCpfMask]',\n})\nexport class CpfMaskDirective implements OnInit {\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(cpf: string): string {\n    let newVal = cpf.replace(/\\D/g, '');\n    if (newVal.length === 0) {\n      newVal = '';\n    } else if (newVal.length <= 3) {\n      newVal = newVal.replace(/^(\\d{0,3})/, '$1');\n    } else if (newVal.length <= 6) {\n      newVal = newVal.replace(/^(\\d{0,3})(.*)/, '$1.$2');\n    } else if (newVal.length <= 9) {\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(.*)/, '$1.$2.$3');\n    } else {\n      newVal = newVal.replace(\n        /^(\\d{0,3})(\\d{0,3})(\\d{0,3})(.*)/,\n        '$1.$2.$3-$4'\n      );\n    }\n    return newVal.substr(0, 14);\n  }\n}\n","import { Directive, HostListener, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[anutilsCnpjMask]',\n})\nexport class CnpjMaskDirective implements OnInit {\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(cnpj: string): string {\n    let newVal = cnpj.replace(/\\D/g, '');\n    if (newVal.length === 0) {\n      newVal = '';\n    } else if (newVal.length <= 2) {\n      newVal = newVal.replace(/^(\\d{0,2})/, '$1');\n    } else if (newVal.length <= 6) {\n      newVal = newVal.replace(/^(\\d{0,2})(.*)/, '$1.$2');\n    } else if (newVal.length <= 9) {\n      newVal = newVal.replace(/^(\\d{0,2})(\\d{0,3})(.*)/, '$1.$2.$3');\n    } else if (newVal.length <= 13) {\n      newVal = newVal.replace(\n        /^(\\d{0,2})(\\d{0,3})(\\d{0,3})(.*)/,\n        '$1.$2.$3/$4'\n      );\n    } else {\n      newVal = newVal.replace(\n        /^(\\d{0,2})(\\d{0,3})(\\d{0,3})(\\d{0,4})(.*)/,\n        '$1.$2.$3/$4-$5'\n      );\n    }\n    return newVal.substr(0, 18);\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  ElementRef,\n  OnInit,\n  Input,\n} from '@angular/core';\n\n@Directive({\n  selector: '[anutilsPhoneMask]',\n})\nexport class PhoneMaskDirective implements OnInit {\n  @Input('anutilsPhoneMask') maskType: number | undefined;\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('ngModelChange')\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n      setTimeout(() => {\n        element.dispatchEvent(new Event('input'));\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(phone: string): string {\n    phone = phone.replace(/\\D/g, '');\n    if (phone.length == 0) {\n      return '';\n    }\n    if (phone.length <= 2) {\n      return phone.replace(/^(\\d{0,2})/, '($1');\n    }\n    if (phone.length <= 7) {\n      return phone.replace(/^(\\d{0,2})(.*)/, '($1) $2');\n    }\n    if (phone.length <= 10 && this.maskType == 9) {\n      return phone.replace(/^(\\d{0,2})(\\d{0,5})(.*)/, '($1) $2-$3');\n    }\n    if (phone.length <= 10) {\n      return phone.replace(/^(\\d{0,2})(\\d{0,4})(.*)/, '($1) $2-$3');\n    }\n    return phone\n      .replace(/^(\\d{0,2})(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '($1) $2-$3-$4')\n      .substr(0, 16);\n  }\n}\n","import { Directive, HostListener, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[anutilsZipCodeMask]',\n})\nexport class ZipCodeMaskDirective implements OnInit {\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('ngModelChange')\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n      setTimeout(() => {\n        element.dispatchEvent(new Event('input'));\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(zipCode: string): string {\n    if (zipCode.length == 0) {\n      return '';\n    }\n\n    if (zipCode.length <= 9) {\n      zipCode = zipCode.replace(/\\D/g, '');\n      zipCode = zipCode.replace(/^(\\d{5})(\\d)/, '$1-$2');\n      return zipCode;\n    }\n\n    return zipCode.substr(0, 9);\n  }\n}\n","import { Directive, HostBinding, Input, OnChanges } from '@angular/core';\nimport { IShimmer } from './shimmer.interface';\n\n@Directive({\n  selector: '[anutilsShimmer]',\n})\nexport class ShimmerDirective implements OnChanges {\n  @Input() anutilsShimmer = false;\n  @Input() anutilsShimmerInfo: IShimmer = { width: '0', height: '0' };\n\n  @HostBinding('class.shimmer') get shimmer(): boolean {\n    return this.anutilsShimmer;\n  }\n\n  @HostBinding('style.width') width: string | undefined;\n  @HostBinding('style.height') height: string | undefined;\n\n  ngOnChanges(): void {\n    if (this.anutilsShimmer) {\n      this.width = this.anutilsShimmerInfo.width;\n      this.height = this.anutilsShimmerInfo.height;\n    } else {\n      this.width = 'auto';\n      this.height = 'auto';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CpfMaskDirective } from './cpf-mask/cpf-mask.directive';\nimport { CnpjMaskDirective } from './cnpj-mask/cnpj-mask.directive';\nimport { PhoneMaskDirective } from './phone-mask/phone-mask.directive';\nimport { ZipCodeMaskDirective } from './zip-code-mask/zip-code-mask.directive';\nimport { ShimmerDirective } from './shimmer/shimmer.directive';\n\n@NgModule({\n  declarations: [\n    CpfMaskDirective,\n    CnpjMaskDirective,\n    PhoneMaskDirective,\n    ZipCodeMaskDirective,\n    ShimmerDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    CpfMaskDirective,\n    CnpjMaskDirective,\n    PhoneMaskDirective,\n    ZipCodeMaskDirective,\n    ShimmerDirective,\n  ],\n})\nexport class AnutilsDirectivesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}