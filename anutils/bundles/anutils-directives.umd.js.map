{"version":3,"file":"anutils-directives.umd.js","sources":["../../../projects/anutils/directives/cpf-mask/cpf-mask.directive.ts","../../../projects/anutils/directives/cnpj-mask/cnpj-mask.directive.ts","../../../projects/anutils/directives/phone-mask/phone-mask.directive.ts","../../../projects/anutils/directives/zip-code-mask/zip-code-mask.directive.ts","../../../projects/anutils/directives/shimmer/shimmer.directive.ts","../../../projects/anutils/directives/anutils-directives.module.ts","../../../projects/anutils/directives/anutils-directives.ts"],"sourcesContent":["import { Directive, HostListener, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[anutilsCpfMask]',\n})\nexport class CpfMaskDirective implements OnInit {\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(cpf: string): string {\n    let newVal = cpf.replace(/\\D/g, '');\n    if (newVal.length === 0) {\n      newVal = '';\n    } else if (newVal.length <= 3) {\n      newVal = newVal.replace(/^(\\d{0,3})/, '$1');\n    } else if (newVal.length <= 6) {\n      newVal = newVal.replace(/^(\\d{0,3})(.*)/, '$1.$2');\n    } else if (newVal.length <= 9) {\n      newVal = newVal.replace(/^(\\d{0,3})(\\d{0,3})(.*)/, '$1.$2.$3');\n    } else {\n      newVal = newVal.replace(\n        /^(\\d{0,3})(\\d{0,3})(\\d{0,3})(.*)/,\n        '$1.$2.$3-$4'\n      );\n    }\n    return newVal.substr(0, 14);\n  }\n}\n","import { Directive, HostListener, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[anutilsCnpjMask]',\n})\nexport class CnpjMaskDirective implements OnInit {\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(cnpj: string): string {\n    let newVal = cnpj.replace(/\\D/g, '');\n    if (newVal.length === 0) {\n      newVal = '';\n    } else if (newVal.length <= 2) {\n      newVal = newVal.replace(/^(\\d{0,2})/, '$1');\n    } else if (newVal.length <= 6) {\n      newVal = newVal.replace(/^(\\d{0,2})(.*)/, '$1.$2');\n    } else if (newVal.length <= 9) {\n      newVal = newVal.replace(/^(\\d{0,2})(\\d{0,3})(.*)/, '$1.$2.$3');\n    } else if (newVal.length <= 13) {\n      newVal = newVal.replace(\n        /^(\\d{0,2})(\\d{0,3})(\\d{0,3})(.*)/,\n        '$1.$2.$3/$4'\n      );\n    } else {\n      newVal = newVal.replace(\n        /^(\\d{0,2})(\\d{0,3})(\\d{0,3})(\\d{0,4})(.*)/,\n        '$1.$2.$3/$4-$5'\n      );\n    }\n    return newVal.substr(0, 18);\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  ElementRef,\n  OnInit,\n  Input,\n} from '@angular/core';\n\n@Directive({\n  selector: '[anutilsPhoneMask]',\n})\nexport class PhoneMaskDirective implements OnInit {\n  @Input('anutilsPhoneMask') maskType: number | undefined;\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('ngModelChange')\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n      setTimeout(() => {\n        element.dispatchEvent(new Event('input'));\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(phone: string): string {\n    phone = phone.replace(/\\D/g, '');\n    if (phone.length == 0) {\n      return '';\n    }\n    if (phone.length <= 2) {\n      return phone.replace(/^(\\d{0,2})/, '($1');\n    }\n    if (phone.length <= 7) {\n      return phone.replace(/^(\\d{0,2})(.*)/, '($1) $2');\n    }\n    if (phone.length <= 10 && this.maskType == 9) {\n      return phone.replace(/^(\\d{0,2})(\\d{0,5})(.*)/, '($1) $2-$3');\n    }\n    if (phone.length <= 10) {\n      return phone.replace(/^(\\d{0,2})(\\d{0,4})(.*)/, '($1) $2-$3');\n    }\n    return phone\n      .replace(/^(\\d{0,2})(\\d{0,3})(\\d{0,3})(\\d{0,3})/, '($1) $2-$3-$4')\n      .substr(0, 16);\n  }\n}\n","import { Directive, HostListener, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[anutilsZipCodeMask]',\n})\nexport class ZipCodeMaskDirective implements OnInit {\n  private previousValue = '';\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener('ngModelChange')\n  @HostListener('input')\n  setMask(): void {\n    const element = this.el.nativeElement as HTMLInputElement;\n    const mask = this.createMask(element.value);\n    if (element.value !== this.previousValue) {\n      element.value = mask;\n      this.previousValue = mask;\n      element.dispatchEvent(new Event('input'));\n      setTimeout(() => {\n        element.dispatchEvent(new Event('input'));\n      });\n    }\n  }\n\n  ngOnInit(): void {\n    setTimeout(() => this.setMask(), 0);\n  }\n\n  createMask(zipCode: string): string {\n    if (zipCode.length == 0) {\n      return '';\n    }\n\n    if (zipCode.length <= 9) {\n      zipCode = zipCode.replace(/\\D/g, '');\n      zipCode = zipCode.replace(/^(\\d{5})(\\d)/, '$1-$2');\n      return zipCode;\n    }\n\n    return zipCode.substr(0, 9);\n  }\n}\n","import { Directive, HostBinding, Input, OnChanges } from '@angular/core';\nimport { IShimmer } from './shimmer.interface';\n\n@Directive({\n  selector: '[anutilsShimmer]',\n})\nexport class ShimmerDirective implements OnChanges {\n  @Input() anutilsShimmer = false;\n  @Input() anutilsShimmerInfo: IShimmer = { width: '0', height: '0' };\n\n  @HostBinding('class.shimmer') get shimmer(): boolean {\n    return this.anutilsShimmer;\n  }\n\n  @HostBinding('style.width') width: string | undefined;\n  @HostBinding('style.height') height: string | undefined;\n\n  ngOnChanges(): void {\n    if (this.anutilsShimmer) {\n      this.width = this.anutilsShimmerInfo.width;\n      this.height = this.anutilsShimmerInfo.height;\n    } else {\n      this.width = 'auto';\n      this.height = 'auto';\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CpfMaskDirective } from './cpf-mask/cpf-mask.directive';\nimport { CnpjMaskDirective } from './cnpj-mask/cnpj-mask.directive';\nimport { PhoneMaskDirective } from './phone-mask/phone-mask.directive';\nimport { ZipCodeMaskDirective } from './zip-code-mask/zip-code-mask.directive';\nimport { ShimmerDirective } from './shimmer/shimmer.directive';\n\n@NgModule({\n  declarations: [\n    CpfMaskDirective,\n    CnpjMaskDirective,\n    PhoneMaskDirective,\n    ZipCodeMaskDirective,\n    ShimmerDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    CpfMaskDirective,\n    CnpjMaskDirective,\n    PhoneMaskDirective,\n    ZipCodeMaskDirective,\n    ShimmerDirective,\n  ],\n})\nexport class AnutilsDirectivesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Directive","ElementRef","HostListener","Input","HostBinding","NgModule","CommonModule"],"mappings":"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"}